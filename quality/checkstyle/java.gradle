apply plugin: 'checkstyle'

import java.nio.file.Paths
import java.nio.file.Files
import java.nio.file.StandardCopyOption

// see https://docs.gradle.org/current/dsl/org.gradle.api.plugins.quality.CheckstyleExtension.html
checkstyle {
  toolVersion '8.18' // see https://github.com/checkstyle/checkstyle/releases
  configDir rootProject.file(Paths.get('config', 'quality', 'checkstyle'))
  ignoreFailures false
  showViolations true
  maxErrors 0
  maxWarnings Integer.MAX_VALUE
}

// add a task to reformat code according to the Google Java style
configurations {
  reformat
}

dependencies {
  reformat 'com.google.googlejavaformat:google-java-format:1.7'
}

task reformatJavaSources(
    type: JavaExec,
    description: 'Reformat all Java sources according to style guide') {

  classpath = configurations.reformat
  main = 'com.google.googlejavaformat.java.Main'

  def sources = fileTree(dir: 'src', include: '**/*.java')
  args = ['-i'] + sources

  inputs.files(sources)
  outputs.files(sources)
}

task installPrecommitHook {
  doLast {
    def hookFile = file(Paths.get(rootDir.absolutePath, '.git', 'hooks', 'pre-commit.d', 'check-style'))
    Files.copy(
        Paths.get(rootDir.absolutePath, 'config', 'quality', 'checkstyle', 'pre-commit'),
        Paths.get(hookFile.absolutePath),
        StandardCopyOption.REPLACE_EXISTING
    )
    hookFile.setExecutable(true)
  }
}