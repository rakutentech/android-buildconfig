apply plugin: 'findbugs'

import java.nio.file.Paths

findbugs {
  toolVersion = "3.0.1" // see https://github.com/findbugsproject/findbugs/releases
  effort = 'max' //  min, default, or max.
  ignoreFailures = false
  excludeFilter = rootProject.file(Paths.get('config', 'quality', 'findbugs', 'findbugs-filter.xml'))
  reportLevel = 'low' // low, medium, high
}

check.dependsOn 'findbugs'
task findbugs(type: FindBugs,
    group: 'verification',
    description: 'findbugs checks for main and test java sourcesets of android projects',
    dependsOn: 'assembleRelease' ) {

  project.afterEvaluate {
    def release = android.libraryVariants.find { it.name == 'release' }
    classpath = files(android.bootClasspath) + release.javaCompile.classpath
  }

  classes = files(Paths.get("$buildDir", 'intermediates', 'javac', 'release'))
  source 'src'
  include '**/*.java'
  exclude '**/gen/**'

  reports {
    xml.enabled = false
    html.enabled = true
  }
}

dependencies {
  compileOnly 'com.google.code.findbugs:annotations:3.0.1'
}

android {
  defaultConfig {
    consumerProguardFiles rootProject.file('config/quality/findbugs/proguard-rules')
  }
}
