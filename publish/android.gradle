import java.nio.file.Paths

apply plugin: 'digital.wup.android-maven-publish'

task sourceJar(type: Jar) {
  from android.sourceSets.main.java.srcDirs
  archiveClassifier = 'sources'
}

def javaDocTask = tasks.findByName('generateDoclava')
task javaDocJar(type: Jar) {
  if(javaDocTask) {
    dependsOn javaDocTask
  }
  from Paths.get("$buildDir", 'javadocs')
  archiveClassifier = "javadoc"
}

def kDocTask = tasks.findByName('dokka')
task kDocJar(type: Jar) {
  if (kDocTask) {
    dependsOn kDocTask
    from dokka.outputDirectory
  }
  archiveClassifier = 'kdoc'
}

ext.androidArtifact = { Map config ->
  return {
    config = config ?: [:]

    from config.get('from') ?: components.android
    artifactId config.get('artifactId') ?: project.name

    artifact sourceJar
    if (javaDocTask) {
      artifact javaDocJar
    }
    if (kDocTask) {
      artifact kDocJar
    }
    config.get('artifacts')?.each {
      artifact it
    }

    pom {
      name = config.get('name') ?: project.name
      groupId config.get('groupId') ?: project.group
      version config.get('version') ?: project.version
      description = config.get('description') ?: project.description
      url = config.get('url') ?: project.url
      licenses {
        license {
          name = config.get('licenseName') ?: project.licenseName
          url = config.get('licenseUrl') ?: project.licenseUrl
        }
      }
      scm {
        url = config.get('scmUrl') ?: project.scmUrl
      }
    }
  }
}
